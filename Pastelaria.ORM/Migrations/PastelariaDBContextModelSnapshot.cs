// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pastelaria.ORM;

namespace Pastelaria.ORM.Migrations
{
    [DbContext(typeof(PastelariaDBContext))]
    partial class PastelariaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pastelaria.Domain.Costumer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityDocument")
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(75)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("DOMAIN.COSTUMER");
                });

            modelBuilder.Entity("Pastelaria.Domain.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcessUser")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("EmployeeActiveEnum")
                        .HasColumnType("INT");

                    b.Property<int>("EmployeePermissionsEnum")
                        .HasColumnType("INT");

                    b.Property<string>("IdentityDocument")
                        .IsRequired()
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(75)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.ToTable("DOMAIN.EMPLOYEE");
                });

            modelBuilder.Entity("Pastelaria.Domain.OrderPad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostumerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OpenTime")
                        .HasColumnType("DATE");

                    b.Property<int>("OrderPadPaymentStatus")
                        .HasColumnType("INT");

                    b.Property<int>("OrderPadStatus")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DOMAIN.ORDERPAD");
                });

            modelBuilder.Entity("Pastelaria.Domain.ProcessingProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(75)");

                    b.Property<Guid?>("OrderPadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL");

                    b.HasKey("Id");

                    b.HasIndex("OrderPadId");

                    b.ToTable("PROCESSING.PRODUCT");
                });

            modelBuilder.Entity("Pastelaria.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(75)");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL");

                    b.HasKey("Id");

                    b.ToTable("DOMAIN.PRODUCT");
                });

            modelBuilder.Entity("Pastelaria.Domain.OrderPad", b =>
                {
                    b.HasOne("Pastelaria.Domain.Costumer", "Costumer")
                        .WithMany()
                        .HasForeignKey("CostumerId");

                    b.HasOne("Pastelaria.Domain.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Costumer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pastelaria.Domain.ProcessingProduct", b =>
                {
                    b.HasOne("Pastelaria.Domain.OrderPad", null)
                        .WithMany("ProcessingProducts")
                        .HasForeignKey("OrderPadId");
                });

            modelBuilder.Entity("Pastelaria.Domain.OrderPad", b =>
                {
                    b.Navigation("ProcessingProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
